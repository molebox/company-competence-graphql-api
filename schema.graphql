### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Company {
  bio: String
  contactPerson: String
  email: String
  id: Int!
  industry: Industry
  name: String
  roles: [Role!]!
  trades: [Trade!]!
  website: String
}

input CompanyInputType {
  bio: String
  contactPerson: String
  email: String
  name: String
  roles: [RoleInputType]
  trades: [TradeInputType]
  website: String
}

type Industry {
  companies: [Company]
  id: Int
  name: String
}

input IndustryInputType {
  companies: [CompanyInputType]
  name: String
}

type Mutation {
  createCompany(bio: String!, contactPerson: String!, email: String!, id: Int, name: String!, roles: [RoleInputType], trades: [TradeInputType], website: String!): Company!
  createIndustry(name: String!): Industry
  createRole(name: String!): Role
  createSkill(name: String!): Skill
  createTrade(company: CompanyInputType, name: String!): Trade
  deleteCompany(id: Int!): Company
  deleteIndustry(id: Int!): Industry
  deleteRole(id: Int!): Role
  deleteSkill(id: Int!): Skill
  deleteTrade(id: Int!): Trade
  updateCompany(bio: String, contactPerson: String, email: String, id: Int!, name: String, website: String): Company
  updateIndustry(id: Int!, name: String!): Industry
  updateRole(id: Int!, name: String!): Role
  updateSkill(id: Int!, name: String!): Skill
  updateTrade(id: Int!, name: String!): Trade
}

type Query {
  companies: [Company]
  company(id: Int!): Company
  industries: [Industry]
  industry(id: Int!): Industry
  roles: [Role]
  skill(id: Int!): Skill
  skills: [Skill]
  trade(id: Int!): Trade
  trades: [Trade]
}

type Role {
  company: Company
  id: Int!
  name: String
}

input RoleInputType {
  company: CompanyInputType
  name: String
  skills: [SkillInputType]
}

type Skill {
  id: Int!
  name: String
  role: Role
}

input SkillInputType {
  name: String
  roles: [RoleInputType]
}

type Trade {
  company: Company
  id: Int!
  name: String
}

input TradeInputType {
  company: CompanyInputType
  name: String
}
